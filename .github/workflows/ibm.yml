# This workflow will build a docker container, publish it to IBM Container Registry, and deploy it to IKS when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains a Dockerfile
# 2. Setup secrets in your repository by going to settings: Create ICR_NAMESPACE and IBM_CLOUD_API_KEY
# 3. Change the values for the IBM_CLOUD_REGION, REGISTRY_HOSTNAME, IMAGE_NAME, IKS_CLUSTER, DEPLOYMENT_NAME, and PORT

name: Build and Deploy on OCP

on:
  workflow_dispatch:
    inputs:
      iks_name:
        description: 'ocp cluster name'
        required: false
  pull_request:

# Environment variables available to all jobs and steps in this workflow
env:
  GITHUB_SHA: ${{ github.sha }}
  IBM_CLOUD_API_KEY: ${{ secrets.IBM_CLOUD_API_KEY }}
  IBM_CLOUD_REGION: eu-de
  IKS_CLUSTER: license-service


jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Setup BATS
      uses: mig4/setup-bats@v1
      with:
        bats-version: 1.1.0
        
    - name: Checkout
      uses: actions/checkout@v2

    - name: Download LS repository
      run: git clone https://github.com/IBM/ibm-licensing-operator.git

    - name: Build
      run: |
        cd ./ibm-licensing-operator/
        make build
        curl -Lo ./operator-sdk "https://github.com/operator-framework/operator-sdk/releases/download/v0.17.0/operator-sdk-v0.17.0-x86_64-linux-gnu"
        curl -Lo ./kind "https://kind.sigs.k8s.io/dl/v0.9.0/kind-$(uname)-amd64"
        chmod +x ./operator-sdk
        chmod +x ./kind
        ./operator-sdk-v0.17.0-x86_64-linux-gnu -h
        ./kind create cluster
        ./kind get clusters
        kubectl config get-contexts
        kubectl config set-context kind-kind 
        cd ..     

    # Download and Install IBM Cloud CLI
    - name: Install IBM Cloud CLI
      run: |
        chmod 755 ./cleanup.sh
        chmod 755 ./start_iks.sh
        chmod 755 ./start_bats.sh
        echo  ${{ github.event.inputs.iks_name }}
        curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
        ibmcloud --version
        ibmcloud config --check-version=false
        ibmcloud plugin install -f kubernetes-service
        ibmcloud plugin install -f container-registry
        echo $IKS_CLUSTER$RANDOM > ./clustername.txt

    # Authenticate with IBM Cloud CLI
    - name: Authenticate with IBM Cloud CLI
      run: |
        ibmcloud login --apikey "${IBM_CLOUD_API_KEY}" -r "${IBM_CLOUD_REGION}" -g Default
        ibmcloud cr region-set "${IBM_CLOUD_REGION}"
        ibmcloud cr login

    - name: Create K8s
      run: |
        /bin/bash ./start_iks.sh openshift-marketplace ${{ github.event.inputs.iks_name }} 

    - name: Install License Service
      run:  |
        ./ibm-licensing-operator/common/scripts/ibm_licensing_operator_install.sh --olm_global_catalog_namespace openshift-marketplace
        
    - name: Configure License Service
      run: |
        kubectl get pods -n ibm-common-services
        
        
    - name: Run BATS tests
      run:  |
        ./start_bats.sh
        
    - name: Archive logs
      uses: actions/upload-artifact@v2
      with:
        name: BATS results
        path: ./bats_logs.txt

    - name: Clean
      if: always()
      run: |
        ./cleanup.sh openshift-marketplace

        
        


        
