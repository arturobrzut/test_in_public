# This workflow will build a docker container, publish it to IBM Container Registry, and deploy it to IKS when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains a Dockerfile
# 2. Setup secrets in your repository by going to settings: Create ICR_NAMESPACE and IBM_CLOUD_API_KEY
# 3. Change the values for the IBM_CLOUD_REGION, REGISTRY_HOSTNAME, IMAGE_NAME, IKS_CLUSTER, DEPLOYMENT_NAME, and PORT

name: Operator tests

on:
  workflow_dispatch:
  pull_request:

jobs:
#  scorecard:
#    name: Scorecrd tests
#    runs-on: ubuntu-latest
#    steps:
#    - name: Set up Go 1.x
#      uses: actions/setup-go@v2
#      with:
#        go-version: ^1.14
#      id: go
#    - name: Checkout
#      uses: actions/checkout@v2
#    - name: Download LS repository
#      run: git clone https://github.com/IBM/ibm-licensing-operator.git
#    - name: Build
#      run: |
#        cd ./ibm-licensing-operator/
#        make build
#        curl -Lo ./operator-sdk "https://github.com/operator-framework/operator-sdk/releases/download/v0.17.0/operator-sdk-v0.17.0-x86_64-linux-gnu"
#        curl -Lo ./kind "https://kind.sigs.k8s.io/dl/v0.9.0/kind-$(uname)-amd64"
#        chmod +x ./operator-sdk
#        chmod +x ./kind
#        ./kind create cluster --image kindest/node:v1.17.2
#        ./kind get clusters
#        kubectl config get-contexts
#        kubectl config set-context kind-kind 
#        kubectl get pods --all-namespaces
#   
#    - name: Deploy Operators YAML
#      run: |
#        cd ./ibm-licensing-operator/
#        kubectl create namespace ibm-common-services
#        kubectl apply -f ./deploy/crds/operator.ibm.com_ibmlicenseservicereporters_crd.yaml
#        kubectl apply -f ./deploy/crds/operator.ibm.com_ibmlicensings_crd.yaml
#        kubectl apply -f ./deploy/service_account.yaml -n ibm-common-services
#        kubectl apply -f ./deploy/role.yaml
#        kubectl apply -f ./deploy/role_binding.yaml 
#
#    - name: Run Scorecard tests
#      run: |
#        cp ./.osdk-scorecard.yaml ./ibm-licensing-operator/
#        cd ./ibm-licensing-operator/
#        ./operator-sdk scorecard namespace ibm-common-services --verbose 2>&1 | tee ./scorecard_logs.txt 
#      
#    - name: Archive scorecard logs
#      uses: actions/upload-artifact@v2
#      with:
#        name: scorecard results
#        path: ./ibm-licensing-operator/*.txt
    
     
  setup-build-publish-deploy:
    name: deploy operator tests
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Checkout
      uses: actions/checkout@v2

    - name: Download LS repository
      run: git clone https://github.com/IBM/ibm-licensing-operator.git

    - name: Download binaries
      run: |
        wget https://github.com/operator-framework/operator-sdk/releases/download/v0.17.0/operator-sdk-v0.17.0-x86_64-linux-gnu
        wget https://github.com/kubernetes-sigs/kind/releases/download/v0.9.0/kind-linux-amd64
        mv ./kind-linux-amd64 ./kind
        mv ./operator-sdk-v0.17.0-x86_64-linux-gnu ./operator-sdk
        chmod +x ./operator-sdk
        chmod +x ./kind
        ./kind create cluster --image kindest/node:v1.17.2 --name tests        
        kubectl config set-context kind-tests        
        kubectl create namespace ibm-common-services
        cd ./ibm-licensing-operator/
        make build
        kubectl apply -f ./deploy/crds/operator.ibm.com_ibmlicenseservicereporters_crd.yaml
        kubectl apply -f ./deploy/crds/operator.ibm.com_ibmlicensings_crd.yaml
        kubectl apply -f ./deploy/service_account.yaml -n ibm-common-services
        kubectl apply -f ./deploy/role.yaml
        kubectl apply -f ./deploy/role_binding.yaml 
        
    - name: Test Operator
      run: |
        chmod +x ./tests.sh
        cd ./ibm-licensing-operator/
        ./../operator-sdk run --watch-namespace ibm-common-services --local &
        ./../tests.sh 2>&1 | tee ./../operator_logs.txt &
       
    - name: Archive logs
      uses: actions/upload-artifact@v2
      with:
        name: operator results
        path: ./*.txt



        
