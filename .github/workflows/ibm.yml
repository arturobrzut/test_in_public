# This workflow will build a docker container, publish it to IBM Container Registry, and deploy it to IKS when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains a Dockerfile
# 2. Setup secrets in your repository by going to settings: Create ICR_NAMESPACE and IBM_CLOUD_API_KEY
# 3. Change the values for the IBM_CLOUD_REGION, REGISTRY_HOSTNAME, IMAGE_NAME, IKS_CLUSTER, DEPLOYMENT_NAME, and PORT

name: Build and Deploy to IKS

on:
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'branch'
        required: true
        default: 'master'
  pull_request:

# Environment variables available to all jobs and steps in this workflow
env:
  GITHUB_SHA: ${{ github.sha }}
  IBM_CLOUD_API_KEY: ${{ secrets.IBM_CLOUD_API_KEY }}
  IBM_CLOUD_REGION: eu-de
  IKS_CLUSTER: license-service
  IKS_CLUSTER_FLAVOR: u3c.2x4
  IKS_CLUSTER_TAG_NAMES: owner:artur.bereta,team:CP4MCM,Usage:temp,Usage_desc:'Certification tests',Review_freq:month    
  DEPLOYMENT_NAME: mq-advanced

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # Download and Install IBM Cloud CLI
    - name: Install IBM Cloud CLI
      run: |
        curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
        ibmcloud --version
        ibmcloud config --check-version=false
        ibmcloud plugin install -f kubernetes-service
        ibmcloud plugin install -f container-registry
        echo $RANDOM > ./random.txt

    # Authenticate with IBM Cloud CLI
    - name: Authenticate with IBM Cloud CLI
      run: |
        ibmcloud login --apikey "${IBM_CLOUD_API_KEY}" -r "${IBM_CLOUD_REGION}" -g Default
        ibmcloud cr region-set "${IBM_CLOUD_REGION}"
        ibmcloud cr login

    - name: Create K8s
      run: |
        chmod 755 ./start_iks.sh
        /bin/bash ./start_iks.sh

    # Deploy the  to the IKS cluster
    - name: Deploy to IKS
      run: |
        export RANDFILE=`cat ./random.txt`
        export CN=$IKS_CLUSTER$RANDFILE
        echo $CN
        ibmcloud ks cluster config --cluster $CN  --yaml --admin
        kubectl config current-context
        kubectl get nodes
        # ibmcloud ks cluster rm  --cluster $CN
